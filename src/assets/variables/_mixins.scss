// Block Element
// @access public
// @param {String} $element - Element's name

@mixin element($element) {
    &__#{$element} {
        @content;
    }
}

@mixin e($element) {
    @include element($element) {
        @content;
    }
}

// Block Modifies
// @access public
// @param {String} $modifier - Modifier's name

@mixin modify($modifier) {
    &--#{$modifier} {
        @content;
    }
}

@mixin m($modifier) {
    @include modify($modifier) {
        @content;
    }
}

// Box Shadow

@mixin box-shadow($color) {
    box-shadow: 5px 5px 10px rgba($color, 0.5);
  
    &:hover {
      box-shadow: 5px 5px 10px rgba($color, 0.6);
    }
  
    &:active {
      box-shadow: none;
    }
}

// Media Queries
/*
  # Usage:
  -----------------------
  .header {
    height: 50px;
    @include respond-to(tablet){
      height: 40px // This will overide the height in tablet and wider screen sizes
    }
    @include respond-to(desktop){
      height: 30px // This will overide the height in desktop and wider screen sizes
      color: red;
    }
    @include respond-to(ultrawide){
      height: 30px // This will overide the height in desktop and wider screen sizes
      max-width: 50px;
    }
  }
*/

$tablet-and-wider: 768px; // Tablet
$desktop-and-wider: 1024px; // Desktop
$desktop-large-and-wider: 1440px; // Large desktops

@mixin respond-to($media) {
  @if $media == tablet {
    @media screen and (min-width: $tablet-and-wider) {
        @content;
    }
  }
  @else if $media == desktop {
    @media screen and (min-width: $desktop-and-wider) {
        @content;
    }
  }
  @else if $media==ultrawide {
    @media (min-width: $desktop-large-and-wider) {
        @content;
    }
  }
}
